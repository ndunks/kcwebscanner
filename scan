#!/usr/bin/env php
<?php
if ( $argc < 2 ) {
    die( "usage {$argv[0]} [url] [file-extension] [IGNORE HTTP RESPONSE CODE][..]\n" );
}
$url = rtrim( $argv[1], '/' );
$url_parsed = parse_url( $url );
$ext = $argc >= 3 ? $argv[2] : '';
$ignore_code = [404];
$linew = 80;
if ( $argc >= 4 ) {
    $ignore_code = array_merge( $ignore_code, array_splice( $argv, 3 ) );
}
$content_type = null;
function do_test( $str, &$no )
{
    global $url, $ext, $curl_opt, $ignore_code, $ch, $linew, $content_type;

    $str = trim( $str );
    if ( $no != 0 && strlen( $str ) == 0 ) {
        return;
    }

    $str = str_replace( ' ', '%20', $str );
    $full_url = $url . '/' . $str . $ext;

    $curl_opt[CURLOPT_URL] = $full_url;
    curl_setopt_array( $ch, $curl_opt );
    echo str_pad( $no, 6 ) . ": $full_url ";
    $resp = curl_exec( $ch );
    $info =  curl_getinfo( $ch );
    if($info['redirect_url']){
        echo "\rWARN: redirect to " . $info['redirect_url'] . "\n";
    }
    $http_code = $info['http_code'];
    if( $no == 0){
        $content_type = $info['content_type'];
        if( !in_array($http_code, $ignore_code)){
            echo "\rAdded to ignore code: $http_code      \n";
            $ignore_code[] = $http_code;
        }
    }else if ($content_type){
        if( $content_type != $info['content_type'] ){
            echo " Type: " . $info['content_type'] . "\n";
        }
    }
    echo $http_code;
    $no++;
    if ( in_array( $http_code, $ignore_code ) ) {
        echo "\r" . str_repeat( ' ', $linew ) . "\r";
    } else {
        echo "\n";
    }
}

function probe_words( $base )
{
    $arr = [
        ucfirst( $base ),
        "${base}-data", "${base}_data",
        "${base}-db", "${base}_db",
        "${base}-backup", "${base}_backup",
        "${base}_old", "${base}_new",
        "${base}-old", "${base}-new",
        "${base}-latest", "${base}-release",
        "${base}_latest", "${base}_release",
        "${base}_files", "${base}_web",
        "${base}-files", "${base}-web",
    ];
    $cnt = count( $arr );
    for ( $i = 0; $i < $cnt; $i++ ) {
        $arr[] = strtoupper( $arr[$i] );
    }
    for ( $i = 1; $i < 5; $i++ ) {
        $arr[] = "{$base}-v$i";
        $arr[] = "{$base}-V$i";
        $arr[] = "{$base}_v$i";
        $arr[] = "{$base}_V$i";
        $arr[] = "{$base}v$i";
        $arr[] = "{$base}V$i";
    }
    $cnt = count( $arr );
    for ( $i = 0; $i < $cnt; $i++ ) {
        $arr[] = "{$arr[$i]}.zip";
        $arr[] = "{$arr[$i]}.gzip";
        $arr[] = "{$arr[$i]}.tar";
        $arr[] = "{$arr[$i]}.tar.gz";
        $arr[] = "{$arr[$i]}.sql";
        $arr[] = "{$arr[$i]}.rar";
        $arr[] = "{$arr[$i]}.md";
        $arr[] = "{$arr[$i]}.txt";
    }
    return $arr;
}

$file = @$_SERVER['WORDS'] ?: 'words.txt';
if ( !is_file( $file ) ) {
    die( "File not exists" );
}
$hostname = parse_url( strtolower( $url ), PHP_URL_HOST );
// Remove domain extension
$hostname_no_extension = preg_replace( '/(\.[^.]{2,3})?(\.[^.]{2,10})$/', '', $hostname );
$hostname_parts = explode( '.', $hostname_no_extension );
$autowords = [];
$autowords += $hostname_parts;
$autowords[] = $hostname_no_extension;

if ( strpos( $hostname_no_extension, '.' ) > 0 ) {
    $autowords[] = str_replace( '.', '-', $hostname_no_extension );
    $autowords[] = str_replace( '.', '_', $hostname_no_extension );
}
$autowords[] = $hostname;

echo "TARGET    : $url\n";
echo "WORDS     : $file\n";
echo "AUTOWORDS : " . implode( ' ', $autowords ) . "\n";
echo "IGNORE    : " . implode( ' ', $ignore_code ) . "\n";
echo str_repeat( "-", $linew ) . "\n";

$curl_opt = [
    CURLOPT_AUTOREFERER => false,
    CURLOPT_SSL_VERIFYPEER => false,
    CURLOPT_SSL_VERIFYHOST => false,
    CURLOPT_FOLLOWLOCATION => false,
    CURLOPT_RETURNTRANSFER => true,
    CURLOPT_NOBODY => true,
    // CURLOPT_COOKIE => ''
    // CURLOPT_NOPROGRESS => false,
    // CURLOPT_CUSTOMREQUEST    => 'HEAD'
];
if ( isset( $_SERVER['COOKIE'] ) ) {
    $curl_opt[CURLOPT_COOKIE] = $_SERVER['COOKIE'];
}
if ( isset( $_SERVER['BODY'] ) ) {
    echo "With body\n";
    $curl_opt[CURLOPT_NOBODY] = false;
}
if ( isset( $_SERVER['CURL_HOST'] ) ) {
    echo "With host: " . $_SERVER['CURL_HOST'] . "\n";
    $curl_opt[CURLOPT_HTTPHEADER] = ["Host: " . $_SERVER['CURL_HOST']];
}
$ch = curl_init();
# heuristic by content size
$no = 0;
do_test( '', $no );
$no = 1;
$words = fopen( $file, 'r' );
while (  ( $str = fgets( $words ) ) !== false ) {
    do_test( $str, $no );
}

fclose( $words );

// Auto heuristic keyboard
foreach ( $autowords as $basestr ) {
	$str_list = [$basestr] + probe_words( $basestr );
    foreach ( $str_list as $str ) {
		do_test( $str, $no );
    }
}
curl_close( $ch );

echo "\n";
